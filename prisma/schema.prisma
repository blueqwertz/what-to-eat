// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// ENUMS
enum TimeOfDay {
    MORNING
    NOON
    AFTERNOON
    EVENING
}

enum Unit {
    GRAMM
    MILLILITER
    SPOONS
    PIECES
}

// MODELS
model History {
    id        String    @id @default(cuid())
    date      DateTime  @default(now())
    mealId    String
    meal      Meal      @relation(fields: [mealId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    timeOfDay TimeOfDay @default(NOON)

    @@index([mealId])
}

model Meal {
    id                 String               @id @default(cuid())
    createdAt          DateTime             @default(now())
    name               String               @unique
    history            History[]
    ingredientsInMeals IngredientsInMeals[]
    rating             Rating[]
}

model Ingredient {
    id                 String               @id @default(cuid())
    name               String               @unique
    image              String               @default("")
    ingredientsInMeals IngredientsInMeals[]
}

model IngredientsInMeals {
    mealId       String
    meal         Meal       @relation(fields: [mealId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    ingredientId String
    ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    count        Int        @default(0)
    unit         Unit       @default(GRAMM)

    @@id([mealId, ingredientId])
    @@index([mealId])
    @@index([ingredientId])
}

model Rating {
    id     String @id @default(cuid())
    score  Float
    mealId String
    meal   Meal   @relation(fields: [mealId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([mealId])
}
